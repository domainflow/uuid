name: Tests
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: xdebug, mbstring
          coverage: xdebug

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Save vendor folder
        uses: actions/upload-artifact@v4
        with:
          name: vendor-${{ matrix.php-version }}
          path: vendor
          compression-level: 0

  lint:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: xdebug, mbstring

      - name: Restore vendor folder
        uses: actions/download-artifact@v4
        with:
          name: vendor-${{ matrix.php-version }}
          path: vendor

      - name: Add permissions for executables
        run: chmod -R +x vendor/bin

      - name: Run PHPStan
        run: composer phpstan

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: xdebug, mbstring

      - name: Restore vendor folder
        uses: actions/download-artifact@v4
        with:
          name: vendor-${{ matrix.php-version }}
          path: vendor

      - name: Add permissions for executables
        run: chmod -R +x vendor/bin

      - name: Run PHPUnit
        run: composer test

  code-coverage:
    runs-on: ubuntu-latest
    needs: unit-tests
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: xdebug, mbstring

      - name: Restore vendor folder
        uses: actions/download-artifact@v4
        with:
          name: vendor-${{ matrix.php-version }}
          path: vendor

      - name: Add permissions for executables
        run: chmod -R +x vendor/bin

      - name: Run code coverage
        run: composer code-coverage

      - name: Check code coverage
        run: |
          coverage=$(php -r "
            \$xml = simplexml_load_file('build/coverage/clover.xml');
            echo (int) (\$xml->project->metrics['coveredstatements'] / \$xml->project->metrics['statements'] * 100);
          ")
          coverage=$(echo "$coverage" | tr -d '"')
          echo "Coverage: $coverage%"

          if [ "$coverage" -lt 100 ]; then
            echo "Code coverage is below 100%"
            exit 1
          fi

  integration-tests:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: xdebug, mbstring

      - name: Restore vendor folder
        uses: actions/download-artifact@v4
        with:
          name: vendor-${{ matrix.php-version }}
          path: vendor

      - name: Add permissions for executables
        run: chmod -R +x vendor/bin

      - name: Run PHPUnit Integration tests
        run: composer test-integration